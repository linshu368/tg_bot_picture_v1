
  # 功能规格说明（FSD）

  **模块：对话交互模块（第一阶段核心）**

  ## 1. 功能描述

  * **是什么**：提供基于会话的多轮对话交互模块，支持上下文记忆、角色切换和用户自定义角色。
  * **为什么存在**：实现核心对话体验，保证用户可以自由与 Bot 交流，并在不同角色上下文间灵活切换，支撑未来的积分、付费和会员扩展。

  ---

  ## 2. 用户场景

  ### 场景1：基础对话

  * **触发条件**：用户进入 Bot。
  * **用户操作**：直接输入消息。
  * **系统响应**：生成新的 session\_id（若无），记录消息上下文，返回 Bot 回复，并在底部展示操作按钮（重新生成、停止生成、新对话）。

  ### 场景2：重新生成回复

  * **触发条件**：用户点击“重新生成回复”按钮。
  * **用户操作**：无需输入，触发重新生成请求。
  * **系统响应**：基于相同的上下文重新生成本轮回复，session\_id 不变。

  ### 场景3：开启新对话

  * **触发条件**：用户点击“开启新对话”按钮。
  * **用户操作**：无需输入。
  * **系统响应**：清空当前上下文，生成新的 session\_id，并返回欢迎回复。

  ### 场景4：角色切换

  * **触发条件**：用户点击“选择角色”按钮 → 跳转角色卡频道 → 选择角色卡。
  * **用户操作**：选择指定角色卡。
  * **系统响应**：加载角色的 system\_prompt、model\_name 与预置对话，生成新的对话上下文（session\_id 不变）。

  ---

  ## 3. 输入与输出（字段定义）

  ### 会话维度字段

  | 字段名         | 类型      | 约束                        | 是否必填 | 描述         |
  | ----------- | ------- | ------------------------- | ---- | ---------- |
  | session\_id | string  | UUID v4，长度36              | 是    | 当前会话唯一标识   |
  | user\_id    | string  | UUID v4，长度36              | 是    | 用户唯一标识     |
  | message\_id | string  | UUID v4，长度36              | 是    | 每条消息唯一标识   |
  | role        | enum    | “user”, “bot”, “system” | 是    | 消息发送方角色    |
  | content     | string  | 长度1\~2000字符               | 是    | 消息内容文本     |
  | timestamp   | int64   | Unix 时间戳                  | 是    | 消息产生时间     |
  | is\_regen   | boolean | {true, false}             | 否    | 是否为重新生成的回复 |

  ### 用户维度字段

  | 字段名               | 类型     | 约束           | 是否必填 | 描述           |
  | ----------------- | ------ | ------------ | ---- | ------------ |
  | user\_id          | string | UUID v4，长度36 | 是    | 用户唯一标识       |
  | private\_role\_id | string | UUID v4，长度36 | 否    | 用户保存的自定义角色ID |

  ### 角色维度字段

  | 字段名            | 类型     | 约束                | 是否必填 | 描述                     |
  | -------------- | ------ | ----------------- | ---- | ---------------------- |
  | role\_id       | string | UUID v4，长度36      | 是    | 静态角色唯一标识               |
  | system\_prompt | string | 长度1\~5000字符       | 是    | 角色系统提示语                |
  | preset\_dialog | array  | 长度0\~20，元素为string | 否    | 预置对话，用于角色初始化           |
  | model\_name    | string | 长度1\~50           | 是    | 模型名称（如 gpt-4, gpt-3.5） |

  ---

  ## 4. 边界条件与异常情况

  | 错误码   | 描述              | 触发条件                          | 系统行为              |
  | ----- | --------------- | ----------------------------- | ----------------- |
  | 40001 | 无效的 session\_id | 提供的 session\_id 格式不符合 UUID v4 | 返回错误提示，不记录消息      |
  | 40002 | 消息内容超长          | content 超过 2000 字符            | 拒绝消息，提示用户         |
  | 40003 | 角色不存在           | 提供的 role\_id 未找到              | 返回错误提示，维持原角色      |
  | 40004 | 上下文丢失           | session\_id 已过期或被清理           | 自动生成新 session\_id |
  | 50001 | 内部生成失败          | 模型调用异常                        | 返回“生成失败，请重试”提示    |

  ---

  ## 5. 验收标准

  1. **输入**：用户输入 `“你好”` → **期望输出**：Bot 回复文本（非空） → **系统状态变化**：消息存储成功，session\_id 不变。
  2. **输入**：用户点击“重新生成回复” → **期望输出**：新回复（内容不同于上一条） → **系统状态变化**：追加一条 bot 消息，is\_regen = true。
  3. **输入**：用户点击“开启新对话” → **期望输出**：Bot 返回欢迎消息 → **系统状态变化**：生成新 session\_id，旧上下文清空。
  4. **输入**：用户选择角色（role\_id 有效）→ **期望输出**：Bot 使用对应的 system\_prompt 回复 → **系统状态变化**：对话上下文更新为新角色设定。
  5. **输入**：用户发送 3000 字符消息 → **期望输出**：错误提示（内容超长） → **系统状态变化**：消息未写入数据库。

  ---

  ## 6. 测试用例示例

  ### 测试用例1：正常对话

  * **输入**：`"早上好"`
  * **操作**：发送消息
  * **期望输出**：Bot 回复一条非空文本
  * **系统状态**：消息成功写入，session\_id 不变。

  ### 测试用例2：边界值消息长度

  * **输入**：2000 字符消息
  * **操作**：发送消息
  * **期望输出**：Bot 正常回复
  * **系统状态**：消息成功写入。
  * **再输入**：2001 字符消息
  * **期望输出**：提示错误（40002 消息内容超长）
  * **系统状态**：消息未写入。

  ### 测试用例3：异常角色切换

  * **输入**：选择不存在的 role\_id `"abc-123"`
  * **期望输出**：错误提示（40003 角色不存在）
  * **系统状态**：维持原有角色设定，不切换。
  
  ================================================================

    一、 会话维度（基础）
  session_id字段，每个对话只要用户不主动中断（重启、切换角色）就都认为是一个对话。使用session_id来区分，每新开一段对话都新生成一个session_id。
  提醒：会话管理的关键是记忆管理，记忆管理的粒度一定要细。

  - 用户进入后直接可与Bot自由对话（对话流）（不让他选择，直接给他一个用户卡片）
  - 支持上下文记忆（支持多用户独立会话线程）

  相关按钮
  1. 重新生成回复：对上一轮AI回复重新生成 (按钮)
  2. 停止生成（用户输入新对话则默认打断生成）
  以上所有按钮
    1. session_id不变
    2. 每一轮底部都默认加这几个按钮

  3. 开启新对话：清空当前上下文，重新开始 （按钮）
    - 生成新 session_id
  二、用户维度
  1. 用户账户信息（user_id）
  2. 用户私人仓库（private_role_id）
  放私人角色  （用户保存的角色，user_id + role_id +用户私人聊天记录 → 自定义角色卡）

  预留：积分系统 / 付费系统 / 会员系统